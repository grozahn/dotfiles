" Plugins
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" UI
Plugin 'Yggdroot/indentLine'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'rafi/awesome-vim-colorschemes'
Plugin 'chriskempson/vim-tomorrow-theme'
Plugin 'ryanoasis/vim-devicons'

" Completion
Plugin 'valloric/youcompleteme'
Plugin 'honza/vim-snippets'
Plugin 'sirver/ultisnips'

" Tools
Plugin 'scrooloose/syntastic'
Plugin 'raimondi/delimitmate'
Plugin 'matze/vim-move'
Plugin 'tpope/vim-fugitive'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'

" C++
Plugin 'octol/vim-cpp-enhanced-highlight'

" Python
Plugin 'klen/python-mode'
Plugin 'mitsuhiko/vim-python-combined'

call vundle#end()

" TrueColor
if (has("nvim"))
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
  set termguicolors
endif

" Terminal toggle
if has('nvim')
  let g:term_buf = 0
  let g:term_win = 0

  function! TerminalToggle(height)
    if win_gotoid(g:term_win)
      hide
    else
      botright new
      exec "resize " . a:height
      try
        exec "buffer " . g:term_buf
      catch
        call termopen($SHELL, {"detach": 0})
        let g:term_buf = bufnr("")
      endtry
      startinsert!
      let g:term_win = win_getid()
    endif
  endfunction

  nnoremap <F4> :call TerminalToggle(10)<cr>
  tnoremap <F4> <C-\><C-n>:call TerminalToggle(10)<cr>
endif

" ----------------------------

" Common settings
set nocompatible
set noswapfile
filetype off
filetype plugin on
filetype plugin indent on

" Encoding
set encoding=utf-8
set termencoding=utf-8

" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" YouCompleteMe
let g:ycm_global_ycm_extra_conf = '~/.config/nvim/ycm_extra_conf.py'
let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_confirm_extra_conf = 1
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']

" UltiSnips
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" Python-mode
let g:pymode_rope = 0
let g:pymode_python = 'python3'

" NERDTree
let NERDTreeMinimalUI = 1
let g:NERDTreeDirArrowExpandable = ''
let g:NERDTreeDirArrowCollapsible = ''
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 1

" Mapping
nnoremap <F1> :AirlineToggle<CR>
nnoremap <F2> :TagbarToggle<CR>
nnoremap <F3> :NERDTreeToggle<CR>
nnoremap <C-a> :bprevious<CR>
nnoremap <C-d> :bnext<CR>
nnoremap <C-q> :bdelete<CR>

" Tab key
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" Navigation
set cursorline
set mouse=a
set number

" Style
syntax enable
set background=dark
colorscheme nord 

" Other
let g:tagbar_compact = 1
let g:indentLine_char = '▏'
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

