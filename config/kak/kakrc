# plug.kak init
source "%val{config}/plugins/plug.kak/rc/plug.kak"

# Plugins
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    define-command lsp-restart %{ lsp-stop; lsp-start }

    set-option global lsp_diagnostic_line_error_sign "!"
    set-option global lsp_diagnostic_line_warning_sign "?"

    hook global WinSetOption filetype=(c|cpp|go|python|rust) %{
        map window user "l" ": enter-user-mode lsp<ret>" -docstring "LSP mode"
        lsp-enable-window

        # Language Client mappings
        map global normal "<c-k>" ": lsp-hover<ret>"
        map global insert "<c-k>" "<a-;>: lsp-hover<ret>"

        # lsp-auto settings
        lsp-auto-hover-enable
        lsp-auto-hover-insert-mode-disable
        lsp-auto-signature-help-enable

        set-option window lsp_hover_anchor true
        set-face window DiagnosticError default+u
        set-face window DiagnosticWarning default+u
    }
    hook global KakEnd .* lsp-exit
}

plug "andreyorst/smarttab.kak" %{
    set-option global tabstop 4
    set-option global indentwidth 4
    set-option global softtabstop 4

    hook global WinSetOption filetype=(python|rust|kak|sh|markdown) expandtab
    hook global WinSetOption filetype=(go|makefile) noexpandtab
    hook global WinSetOption filetype=(c|cpp) smarttab
}

plug "andreyorst/fzf.kak" %{
    map global normal <c-p> ":fzf-mode<ret>"
}

plug "andreyorst/pmanage.kak"

plug "occivink/kakoune-gdb"

# Colorscheme
# tomorrow-night, dracula, solarized-light
colorscheme tomorrow-night

# Highlighters
hook global KakBegin .* %{
    add-highlighter global/numbers    number-lines -relative -hlcursor -separator " "
    add-highlighter global/matching   show-matching
    add-highlighter global/whitespace show-whitespaces -tab "▏" -lf " " -nbsp "⋅" -spc " "
    add-highlighter global/wrap       wrap -word -indent -marker ↪
}

# convert between snake_case and camelCase
def to-camelcase %{
    exec "`s[-_<space>]<ret>d~<a-i>w"
}

def to-snakecase %{
    exec "<a-:><a-;>s-|[a-z][A-Z]<ret>;a<space><esc>s[-\s]+<ret>c_<esc><a-i>w`"
}

# Tmux integration
define-command -override -docstring "Split tmux vertically" \
vsp -params .. -command-completion %{
    tmux-terminal-horizontal kak -c %val{session} -e "%arg{@}"
}

define-command -override  -docstring "Split tmux horizontally" \
sp -params .. -command-completion %{
    tmux-terminal-vertical kak -c %val{session} -e "%arg{@}"
}

define-command -override -docstring "Create new tmux window" \
tabnew -params .. -command-completion %{
    tmux-terminal-window kak -c %val{session} -e "%arg{@}"
}

# Generals
set-option global idle_timeout 500

# Mappings
map global user s :fzf-mode<ret>b -docstring "Select buffer"
map global user d :buffer-next<ret> -docstring "Next buffer"
map global user a :buffer-previous<ret> -docstring "Previous buffer"
map global user q :delete-buffer!<ret> -docstring "Delete buffer"

map global user m :man<ret> -docstring "Open Man page"

map global user y <a-|>xsel -ib<ret> -docstring "Yank to system clipboard"
map global user c <a-|>wl-copy<ret> -docstring "Yank to system clipboard (Wayland)"

map global normal "#" :comment-line<ret>
map global normal "@" :comment-block<ret>

# Completion by Tab key
hook global InsertCompletionShow .* %{map   window insert <tab> <c-n>; map   window insert <s-tab> <c-p>}
hook global InsertCompletionHide .* %{unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p>}
